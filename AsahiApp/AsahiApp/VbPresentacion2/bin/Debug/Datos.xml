<?xml version="1.0"?>
<doc>
<assembly>
<name>
Datos
</name>
</assembly>
<members>
<member name="T:Datos.My.Resources.Resources">
<summary>
  Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
</summary>
</member>
<member name="P:Datos.My.Resources.Resources.ResourceManager">
<summary>
  Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
</summary>
</member>
<member name="P:Datos.My.Resources.Resources.Culture">
<summary>
  Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
  búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
</summary>
</member>
<member name="M:Datos.DAbono.RecuperarCabecera(System.String,Clases.Abono)">
 <summary>
 Recupera Info del Abono a excepcion de los datos Bancarios ni Ficales
 </summary>
 <param name="cadenaConex"></param>
 <param name="A"></param>
 <returns></returns>
</member>
<member name="M:Datos.DAbono.RecuperarCuentas(System.String,Clases.Abono)">
 <summary>
 Recupera la informacion bancaria relacionado con un abono
 la primera fila de la lista es del cliente y la segunda del beneficiario
 </summary>
 <param name="cadenaConex"></param>
 <param name="Abono"></param>
 <returns></returns>
</member>
<member name="T:Datos.DAgente">
 <summary>
 funcion que recupera el id del agente y nombre para el FrmPedidos
 </summary>
</member>
<member name="M:Datos.DAgente.ObtenerAgentesSuc(System.String,Clases.Sucursales)">
 <summary>
 Recupera Agentes de una sucursal en especifico
 </summary>
 <param name="cadenaConex">cadena de la suc local</param>
 <returns></returns>
</member>
<member name="M:Datos.DAgente.ObtenerAgentes(System.String)">
 <summary>
 funcion para entrar a la conexion de SQL, para que mostrar una lista de los agentes
 </summary>
 <param name="cadenaConex"></param>
 <returns>regresa una variable (lst) de tipo lista</returns>
</member>
<member name="M:Datos.DAgente.InsertaAgente(System.String,Clases.Agente)">
 <summary>
 Metodo para insertar un agente a SQL, enviado los parametros
 </summary>
 <param name="cadenaConex"></param>
 <param name="Agente"></param>
</member>
<member name="M:Datos.DAgente.ModificaAgente(System.String,Clases.Agente)">
 <summary>
 metodo para modificar un agente
 </summary>
 <param name="cadenaConex"></param>
 <param name="Agente"></param>
</member>
<member name="M:Datos.DAgente.EliminaAgente(System.String,Clases.Agente)">
 <summary>
 Metodo para eliminar un agente
 </summary>
 <param name="cadenaconex"></param>
 <param name="id"></param>
</member>
<member name="M:Datos.DCiudad.ObtenerCiudades(System.String)">
 <summary>
 Regresa el listado de las ciudades
 </summary>
 <param name="cadenaConex">cadena de conexion</param>
 <returns>Lista de clientes</returns>
</member>
<member name="M:Datos.DCiudad.InsertaCiudad(System.String,Clases.Ciudad)">
 <summary>
 Inserta Ciudad con el Id del Estado correspondiente
 </summary>
 <param name="cadenaConex">Cadena de conexion</param>
 <param name="ObjCiudad">Objeto con Nombre de Ciudad y Id del Estado</param>
</member>
<member name="M:Datos.DClase.ObtenerClases(System.String)">
 <summary>
 funcion para obtener datos desde SQL con el procedimiento "InventClase", para despues mostrarlo en el DataGrieview
 </summary>
 <param name="cadenaConex"></param>
 <returns>regresa la variable lst de tipo LClase(tipo lista) </returns>
</member>
<member name="M:Datos.DClase.InsertaClase(System.String,Clases.Clase)">
 <summary>
 Inserta una clase en SQL
 </summary>
</member>
<member name="M:Datos.DClase.ModificarClase(System.String,Clases.Clase)">
 <summary>
 Modifica la clase en SQL
 </summary>
</member>
<member name="M:Datos.DClase.EliminaClase(System.String,Clases.Clase)">
 <summary>
 Elimina la clase del DataGrieview y de SQL
 </summary>
</member>
<member name="M:Datos.DFactura.RecuperarCabecera(System.String,Clases.Factura)">
 <summary>
 Recuperar sólo la cabecera de una fatura
 </summary>
 <param name="cadenaConex"></param>
 <param name="Factura">Obj Factura con el IdFactura</param>
 <returns>Objeto Factura con toda la informacion de la cabecera</returns>
</member>
<member name="M:Datos.DFactura.RecuperarDetalle(System.String,Clases.Factura)">
 <summary>
 Recupera los productos incluidos en una factura
 </summary>
 <param name="cadenaConex"></param>
 <param name="Factura">Obj Factura con el IdFactura</param>
 <returns>Lista de tipo LProductos con las partidas</returns>
</member>
<member name="M:Datos.DFactura.RecuperaFacturaCxc(System.String,Clases.Factura)">
 <summary>
 Recuperar Informacion relacionada con cxc de una factura en especifico
 </summary>
 <param name="cadenaConex">cadena de conexion</param>
 <param name="Factura">id de la factura</param>
 <returns>objeto con la info de cxc</returns>
</member>
<member name="M:Datos.DFirma.EliminaFirmasPedidos(System.String,Clases.Pedido)">
 <summary>
 elimina las firmas solo cuando el pedido sea modificado
 </summary>
 <param name="cadenaConex"></param>
 <param name="ObjPedido"></param>
</member>
<member name="T:Datos.DPedido">
 <summary>
 proceso que inserta un pedido en sql
 </summary>
</member>
<member name="M:Datos.DPedido.RecuperaPedidoCabecera(System.String,Clases.Pedido)">
 <summary>
 RECIBE LOS VALORES DE LA CABECERA DEL FORMULARIO DE PEDIDOS
 </summary>
 <param name="cadenaConex"></param>
 <param name="Pedido"></param>
 <returns>REGRESA VARIABLE PEDIDO YA LLENA CON VALORES</returns>
</member>
<member name="M:Datos.DPedido.ObtenerDireccion(System.String,Clases.Direccion)">
 <summary>
 proceso que regresa el objeto (objDireccion) con la direccion del cliente
 </summary>
 <param name="cadenaConex"></param>
 <param name="direccion"></param>
 <returns>se regresa el objeto objDircecion</returns>
</member>
<member name="M:Datos.DPedido.ObtenerDetallePedido(System.String,Clases.Usuario,Clases.Pedido)">
 <summary>
 obtiene los productos incluidos en un pedido
 </summary>
 <param name="cadenaConex"></param>
 <param name="pedido"></param>
 <returns>regresa una lista de los productos</returns>
</member>
<member name="M:Datos.DPedido.Cancelar(System.String,Clases.Pedido)">
 <summary>
 proceso que cancela un pedido, no lo elimina
 </summary>
 <param name="cadenaConex"></param>
 <param name="Pedido"></param>
</member>
<member name="M:Datos.DPedido.ObtenerDetallePedidoFactura(System.String,Clases.Pedido)">
 <summary>
 Proceso para recuperar un pedido en el formulario de factura
 </summary>
 <param name="cadenaConex"></param>
 <param name="pedido"></param>
 <returns></returns>
</member>
<member name="M:Datos.DProspectos.ObtenerProspectoBuscadorFiltro(System.String,System.String,System.String)">
 <summary>
 Obtener listado de clientes desde el buscador con algun tipo de filtro
 </summary>
 <param name="cadenaConex"></param>
 <param name="texto">palabra clave para filtrar</param>
 <param name="filtro">campo a filtrar</param>
 <returns></returns>
</member>
<member name="M:Datos.DSoporte.obtenerImagen(System.String,System.Int32,Clases.Soporte)">
 <summary>
 Funcion para obtener 
 lista de ticket con el estado "en espera" y "revisado" 
 </summary>
 <param name="cadenaConex"></param>
 <param name="id"></param>
 <returns></returns>
</member>
<member name="M:Datos.DSoporte.InsertSuportId(System.String,Clases.Soporte)">
 <summary>
 función para insertar ticket 
 recibe los datos e inserta
 </summary>
 <param name="cadenaConex"></param>
 <param name="ObjSoporte"></param>
 <returns></returns>
</member>
<member name="M:Datos.DSoporte.InsertarComentarioSuport(System.String,Clases.Soporte)">
 <summary>
  Proceso para Inserta Comentarios
  obtiene los datos e inserta
 </summary>
 <param name="cadenaConex"></param>
 <param name="SuportComent"></param>
</member>
<member name="M:Datos.DSoporte.ObtenerMessenger(System.String,System.Int32)">
 <summary>
 Función para obtener los mensajes 
 envia el id del ticket
 para recibir los mensajes del ticket especificado 
 </summary>
 <param name="cadenaConex"></param>
 <param name="id"></param>
 <returns></returns>
</member>
<member name="M:Datos.DSoporte.FinalizarTicketSuport(System.String,Clases.Soporte)">
 <summary>
 proceso para finalizar TICKET 
 recibe el id que debe ser finalizado
 y envia un mensaje
 </summary>
 <param name="cadenaConex"></param>
 <param name="SuportFinalizar"></param>
</member>
<member name="M:Datos.DSoporte.ObtenerTicket(System.String)">
 <summary>
 hace conexión
 Esta función obtiene información para ser mostrada
 </summary>
 <param name="cadenaConex"></param>
 <returns></returns>
</member>
<member name="M:Datos.DSoporte.RevisarTicketSuport(System.String,Clases.Soporte)">
 <summary>
 Proceso obtiene información necesaria 
 hace conexión
 llama al procedimiento sql
 para ser Revisado 
 </summary>
 <param name="cadenaConex"></param>
 <param name="SuportRevisar"></param>
</member>
<member name="M:Datos.DCodigoSat.ObtenerCodigosSatFiltros(System.String,Clases.CodigoSat)">
 <summary>
 Recupera registros de CodigosSat que coincidan subDivision,codigo o descripcion
 dependiendo el parametro que se le envíe el SP
 </summary>
 <param name="cadenaConex">cadena de conexion String</param>
 <param name="CodigoSat">Objeto CodigoSat</param>
 <returns>Lista de registros de tipo CodigoSat</returns>
</member>
<member name="M:Datos.DContacto.ObtenerContacto(System.String,Clases.Contacto)">
 <summary>
 obtiene la informacion del contacto del cliente
 </summary>
 <param name="cadenaConex"></param>
 <param name="objCliente"></param>
 <returns>regresa variable como objeto</returns>
</member>
<member name="M:Datos.DDireccion.ObtenerDireccion(System.String,Clases.Direccion)">
 <summary>
 obtiene la direcciones que tiene cada cliente, si el cliente tiene mas de uan direccion solo busca la que sea fiscal y se sale del ciclo
 </summary>
 <param name="cadenaConex"></param>
 <param name="objCliente"></param>
 <returns>regresa la variable con el objeto ya lleno de informacion</returns>
</member>
<member name="M:Datos.DMarca.InsertMarca(System.String,Clases.Marca)">
 <summary>
RECIBE EL NOMBRE DE LA MARCA Y LO INSERTA 
 </summary>
 <param name="cadenaConex"></param>
 <param name="objMarca"></param>
</member>
<member name="M:Datos.DMarca.ModificaMarca(System.String,Clases.Marca)">
 <summary>
 RECIBE EL ID, MARCA  Y MODIFICA
 </summary>
 <param name="cadenaConex"></param>
 <param name="objMarca"></param>
</member>
<member name="M:Datos.DPaqueteria.ObtenerPaqueteriaId(System.Object)">
 <summary>
 
 OBTIENE TODA LA INFORMACION DE LA TABLA PAQUETERIA  Y LA ENVIA AL PROCEDIMIENTO DE SQL
 </summary>
 <param name="cadenaConex"></param>
 <returns></returns>
</member>
<member name="M:Datos.DPaqueteria.InsertPaquetId(System.String,Clases.Paqueteria)">
 <summary>
RECIBE TODOS CAMPODS EXCEPTO EL ID YA QUE SE INSERTA AUTOMATICAMENTE Y LO INSERTA 
 </summary>
 <param name="cadenaConex"></param>
 <param name="objPaqueteria"></param>
</member>
<member name="M:Datos.DPaqueteria.ModificaPaqueteriaId(System.String,Clases.Paqueteria)">
 <summary>
 RECIBE TODA LA INFORMACIÓN DE PAQUETERIA YA CON LOS CAMBIOS REALIZADOS Y SE MODIFICA 
 </summary>
 <param name="cadenaConex"></param>
 <param name="objPaqueteria"></param>
</member>
<member name="M:Datos.DPaqueteria.EliminarPaqueteriaId(System.String,Clases.Paqueteria)">
 <summary>
 RECIBE EL NOMBRE DE LA PAQUETRIA QUE FUE SELECCIONADO Y SE ELIMINA
 </summary>
 <param name="cadenaConex"></param>
 <param name="objPaqueteria"></param>
</member>
<member name="M:Datos.DProducto.ObtenerProductoFactura(System.String,Clases.Producto)">
 <summary>
 obtiene la informacion de un producto, desde el formulario de facturas
 </summary>
 <param name="cadenaConex"></param>
 <param name="Producto"></param>
 <returns></returns>
</member>
<member name="M:Datos.DProducto.ObtenerInformacionCodigo(System.String,Clases.Producto)">
 <summary>
 obtiene la informacion x codigo desde el formulario de FrmCodigos
 </summary>
 <param name="cadenaConex"></param>
 <param name="Producto"></param>
 <returns></returns>
</member>
<member name="M:Datos.DProducto.ObtenerTodasMarcas(System.String)">
 <summary>
 obtiene una lista de todas las marcas que hay en Sql
 </summary>
 <param name="cadenaConex"></param>
 <returns>regersa variable de objeto como una lista</returns>
</member>
<member name="M:Datos.DProducto.ObtenerUnidades(System.String)">
 <summary>
 Obtiene todas las unidades desde sql en forma de listado
 </summary>
 <param name="cadenaConex"></param>
 <returns>regresa variable "lstaUnidad" en forma de lista</returns>
</member>
<member name="M:Datos.DProducto.EliminaCodInven(System.String,Clases.Producto)">
 <summary>
 Elimina toda la informacion de un codigo del inventario
 </summary>
 <param name="cadenaConex"></param>
 <param name="codigo"></param>
</member>
<member name="M:Datos.DProducto.InsertaUbicacionSql(System.String,Clases.Producto,Clases.Producto)">
 <summary>
 inserta las ubicaciones que tiene un codigo
 </summary>
 <param name="cadenaConex"></param>
 <param name="codigo"></param>
 <param name="ubicacion"></param>
</member>
<member name="M:Datos.DProducto.ObtenerUbicacionesSql(System.String,Clases.Producto)">
 <summary>
 Obtiene las ubicaciones en forma de lista
 </summary>
 <param name="cadenaConex"></param>
 <returns>Regresa variable "listaUbicacion" de tipo lista</returns>
</member>
<member name="M:Datos.DProducto.EliminaUbicacionInven(System.String,Clases.Producto)">
 <summary>
 Elimina las ubicaciones que tiene un solo codigo
 </summary>
 <param name="cadenaConex"></param>
 <param name="codigo"></param>
</member>
<member name="T:Datos.DSucursales">
 <summary>
 regresa las sucursales a las q tiene acceso un usuario en especifico
 </summary>
</member>
<member name="M:Datos.DSucursales.ObtenerInformacionTimbrar(System.String,Clases.Sucursales)">
 <summary>
 Recuperar Informacion Para el proceso de timbrado de documento fiscal
 </summary>
 <param name="cadenaConex">Cadena de Conexion</param>
 <param name="Sucursal">id de la sucursal</param>
 <returns>Informacion necesaria para timbrar</returns>
</member>
<member name="M:Datos.DUsuario.RecuperarUsuario(System.String,Clases.Usuario)">
 <summary>
 Recupera toda la informacion de un usuario en concreto
 </summary>
 <param name="cadenaConex">Local</param>
 <param name="Usuario">id del usuario</param>
 <returns></returns>
</member>
<member name="M:Datos.DCliente.ObtenerClienteFactura(System.String,Clases.Cliente)">
 <summary>
 Obtener informacion de un cliente para el modulo de factura
 </summary>
 <param name="cadenaConex">Cadena de conexion</param>
 <param name="Cliente">id del cliente</param>
 <returns>ojbCliente con la informacion necesaria</returns>
</member>
<member name="M:Datos.DCliente.ObtenerClientesBuscador(System.String)">
 <summary>
 Regresa Listado de clientes para Buscador sin haber filtrado nada
 </summary>
 <param name="cadenaConex">Cadena de conexion</param>
 <returns>Objeto con: IdCliente, CodSia, CodAdmin,Nombre</returns>
</member>
<member name="M:Datos.DCliente.ObtenerClientesBuscadorFiltro(System.String,System.String,System.String)">
 <summary>
 Obtener listado de clientes desde el buscador con algun tipo de filtro
 </summary>
 <param name="cadenaConex"></param>
 <param name="texto">palabra clave para filtrar</param>
 <param name="filtro">campo a filtrar</param>
 <returns></returns>
</member>
<member name="M:Datos.DCliente.CrearCliente(System.String,Clases.Cliente)">
 <summary>
 Crear cliente desde el modulo de clientes
 </summary>
 <param name="cadenaConex"></param>
 <param name="objCliente"></param>
</member>
<member name="M:Datos.DCliente.ObtenerClientePedidos(System.String,Clases.Cliente)">
 <summary>
 Recupera la informacion de un cliente en especifico a Pedidos
 </summary>
 <param name="cadenaConex">Cadena de conexion</param>
 <param name="objCliente">Objeto Cliente con el parametro id del cte a recuperar</param>
 <returns>Objeto Cliente con la info necesaria para pedidos</returns>
</member>
<member name="M:Datos.DCliente.ModificarCliente(System.String,Clases.Cliente)">
 <summary>
 Modificar cliente desde FrmCliente
 </summary>
 <param name="cadenaConex"></param>
 <param name="objCliente"></param>
 <returns></returns>
</member>
</members>
</doc>
